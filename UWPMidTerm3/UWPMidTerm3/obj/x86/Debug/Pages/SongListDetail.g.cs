#pragma checksum "D:\software\Workspaces\Visual Studio 2017\win 10 uwp\homework\UWPMidTerm3\UWPMidTerm3\Pages\SongListDetail.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "71F6AED29FB591EFB60227E70DEF0673"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UWPMidTerm3.Pages
{
    partial class SongListDetail : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_Image_Source(global::Windows.UI.Xaml.Controls.Image obj, global::Windows.UI.Xaml.Media.ImageSource value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Windows.UI.Xaml.Media.ImageSource) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Windows.UI.Xaml.Media.ImageSource), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SongListDetail_obj6_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISongListDetail_Bindings
        {
            private global::UWPMidTerm3.Models.Song dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private global::Windows.UI.Xaml.ResourceDictionary localResources;
            private global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement> converterLookupRoot;
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;

            public SongListDetail_obj6_Bindings()
            {
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Pages\SongListDetail.xaml line 137
                        this.obj6 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.UserControl)target);
                        break;
                    case 7: // Pages\SongListDetail.xaml line 146
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8: // Pages\SongListDetail.xaml line 147
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Pages\SongListDetail.xaml line 148
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10: // Pages\SongListDetail.xaml line 149
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj6.Target as global::Windows.UI.Xaml.Controls.UserControl).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::UWPMidTerm3.Models.Song) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ISongListDetail_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPMidTerm3.Models.Song)newDataRoot;
                    return true;
                }
                return false;
            }
            public void SetConverterLookupRoot(global::Windows.UI.Xaml.FrameworkElement rootElement)
            {
                this.converterLookupRoot = new global::System.WeakReference<global::Windows.UI.Xaml.FrameworkElement>(rootElement);
            }

            public global::Windows.UI.Xaml.Data.IValueConverter LookupConverter(string key)
            {
                if (this.localResources == null)
                {
                    global::Windows.UI.Xaml.FrameworkElement rootElement;
                    this.converterLookupRoot.TryGetTarget(out rootElement);
                    this.localResources = rootElement.Resources;
                    this.converterLookupRoot = null;
                }
                return (global::Windows.UI.Xaml.Data.IValueConverter) (this.localResources.ContainsKey(key) ? this.localResources[key] : global::Windows.UI.Xaml.Application.Current.Resources[key]);
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPMidTerm3.Models.Song obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_title(obj.title, phase);
                        this.Update_singers(obj.singers, phase);
                        this.Update_album(obj.album, phase);
                        this.Update_interval(obj.interval, phase);
                    }
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 146
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_singers(global::System.Collections.Generic.List<global::System.String> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 147
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, (global::System.String)this.LookupConverter("singersConvert").Convert(obj, typeof(global::System.String), null, null), null);
                }
            }
            private void Update_album(global::UWPMidTerm3.Models.Album obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_album_title(obj.title, phase);
                    }
                }
            }
            private void Update_album_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 148
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                }
            }
            private void Update_interval(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 149
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class SongListDetail_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISongListDetail_Bindings
        {
            private global::UWPMidTerm3.Pages.SongListDetail dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Windows.UI.Xaml.Controls.ListView obj2;
            private global::Windows.UI.Xaml.Controls.Image obj14;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;
            private global::Windows.UI.Xaml.Controls.TextBlock obj25;
            private global::Windows.UI.Xaml.Controls.TextBlock obj26;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj31;
            private global::Windows.UI.Xaml.Controls.TextBlock obj35;

            private SongListDetail_obj1_BindingsTracking bindingsTracking;

            public SongListDetail_obj1_Bindings()
            {
                this.bindingsTracking = new SongListDetail_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 2: // Pages\SongListDetail.xaml line 129
                        this.obj2 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 14: // Pages\SongListDetail.xaml line 19
                        this.obj14 = (global::Windows.UI.Xaml.Controls.Image)target;
                        break;
                    case 24: // Pages\SongListDetail.xaml line 76
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj24).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.album.company = this.obj24.Text;
                            }
                        });
                        break;
                    case 25: // Pages\SongListDetail.xaml line 72
                        this.obj25 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj25).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.album.date = this.obj25.Text;
                            }
                        });
                        break;
                    case 26: // Pages\SongListDetail.xaml line 68
                        this.obj26 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj26).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.album.lan = this.obj26.Text;
                            }
                        });
                        break;
                    case 27: // Pages\SongListDetail.xaml line 64
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj27).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.album.genre = this.obj27.Text;
                            }
                        });
                        break;
                    case 31: // Pages\SongListDetail.xaml line 30
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj31).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.songList.title = this.obj31.Text;
                            }
                        });
                        break;
                    case 35: // Pages\SongListDetail.xaml line 34
                        this.obj35 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        (this.obj35).RegisterPropertyChangedCallback(global::Windows.UI.Xaml.Controls.TextBlock.TextProperty,
                            (global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop) =>
                            {
                            if (this.initialized)
                            {
                                // Update Two Way binding
                                this.dataRoot.songList.num = (global::System.Int32) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Int32), this.obj35.Text);
                            }
                        });
                        break;
                    default:
                        break;
                }
            }

            // ISongListDetail_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::UWPMidTerm3.Pages.SongListDetail)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::UWPMidTerm3.Pages.SongListDetail obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_songList(obj.songList, phase);
                        this.Update_album(obj.album, phase);
                    }
                }
            }
            private void Update_songList(global::UWPMidTerm3.Models.SongList obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_songList(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_songList_songs(obj.songs, phase);
                        this.Update_songList_cover(obj.cover, phase);
                    }
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_songList_title(obj.title, phase);
                        this.Update_songList_num(obj.num, phase);
                    }
                }
            }
            private void Update_songList_songs(global::System.Collections.ObjectModel.ObservableCollection<global::UWPMidTerm3.Models.Song> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 129
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj2, obj, null);
                }
            }
            private void Update_songList_cover(global::Windows.UI.Xaml.Media.Imaging.BitmapImage obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Pages\SongListDetail.xaml line 19
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Image_Source(this.obj14, obj, null);
                }
            }
            private void Update_album(global::UWPMidTerm3.Models.Album obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_album(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_album_company(obj.company, phase);
                        this.Update_album_date(obj.date, phase);
                        this.Update_album_lan(obj.lan, phase);
                        this.Update_album_genre(obj.genre, phase);
                    }
                }
            }
            private void Update_album_company(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 76
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                }
            }
            private void Update_album_date(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 72
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj25, obj, null);
                }
            }
            private void Update_album_lan(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 68
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj26, obj, null);
                }
            }
            private void Update_album_genre(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 64
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                }
            }
            private void Update_songList_title(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 30
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj31, obj, null);
                }
            }
            private void Update_songList_num(global::System.Int32 obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    // Pages\SongListDetail.xaml line 34
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj35, obj.ToString(), null);
                }
            }

            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private class SongListDetail_obj1_BindingsTracking
            {
                private global::System.WeakReference<SongListDetail_obj1_Bindings> weakRefToBindingObj; 

                public SongListDetail_obj1_BindingsTracking(SongListDetail_obj1_Bindings obj)
                {
                    weakRefToBindingObj = new global::System.WeakReference<SongListDetail_obj1_Bindings>(obj);
                }

                public SongListDetail_obj1_Bindings TryGetBindingObject()
                {
                    SongListDetail_obj1_Bindings bindingObject = null;
                    if (weakRefToBindingObj != null)
                    {
                        weakRefToBindingObj.TryGetTarget(out bindingObject);
                        if (bindingObject == null)
                        {
                            weakRefToBindingObj = null;
                            ReleaseAllListeners();
                        }
                    }
                    return bindingObject;
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_songList(null);
                    UpdateChildListeners_album(null);
                }

                public void PropertyChanged_songList(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SongListDetail_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPMidTerm3.Models.SongList obj = sender as global::UWPMidTerm3.Models.SongList;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_songList_title(obj.title, DATA_CHANGED);
                                bindings.Update_songList_num(obj.num, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_songList_title(obj.title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "num":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_songList_num(obj.num, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPMidTerm3.Models.SongList cache_songList = null;
                public void UpdateChildListeners_songList(global::UWPMidTerm3.Models.SongList obj)
                {
                    if (obj != cache_songList)
                    {
                        if (cache_songList != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_songList).PropertyChanged -= PropertyChanged_songList;
                            cache_songList = null;
                        }
                        if (obj != null)
                        {
                            cache_songList = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_songList;
                        }
                    }
                }
                public void PropertyChanged_album(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SongListDetail_obj1_Bindings bindings = TryGetBindingObject();
                    if (bindings != null)
                    {
                        string propName = e.PropertyName;
                        global::UWPMidTerm3.Models.Album obj = sender as global::UWPMidTerm3.Models.Album;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                bindings.Update_album_company(obj.company, DATA_CHANGED);
                                bindings.Update_album_date(obj.date, DATA_CHANGED);
                                bindings.Update_album_lan(obj.lan, DATA_CHANGED);
                                bindings.Update_album_genre(obj.genre, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "company":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_album_company(obj.company, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "date":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_album_date(obj.date, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "lan":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_album_lan(obj.lan, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "genre":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_album_genre(obj.genre, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                private global::UWPMidTerm3.Models.Album cache_album = null;
                public void UpdateChildListeners_album(global::UWPMidTerm3.Models.Album obj)
                {
                    if (obj != cache_album)
                    {
                        if (cache_album != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)cache_album).PropertyChanged -= PropertyChanged_album;
                            cache_album = null;
                        }
                        if (obj != null)
                        {
                            cache_album = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_album;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Pages\SongListDetail.xaml line 129
                {
                    this.myMusicList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.myMusicList).ItemClick += this.myMusicList_ItemClick;
                }
                break;
            case 3: // Pages\SongListDetail.xaml line 164
                {
                    this.TopListPageChange = (global::Windows.UI.Xaml.Controls.GridView)(target);
                }
                break;
            case 4: // Pages\SongListDetail.xaml line 165
                {
                    global::Windows.UI.Xaml.Controls.Button element4 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element4).Click += this.Button_Click;
                }
                break;
            case 5: // Pages\SongListDetail.xaml line 166
                {
                    global::Windows.UI.Xaml.Controls.Button element5 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element5).Click += this.Button_Click_1;
                }
                break;
            case 11: // Pages\SongListDetail.xaml line 153
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element11 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element11).Click += this.PlayMenuFlyoutItem_Click;
                }
                break;
            case 12: // Pages\SongListDetail.xaml line 154
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element12 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element12).Click += this.DownloadMenuFlyoutItem_Click;
                }
                break;
            case 13: // Pages\SongListDetail.xaml line 155
                {
                    global::Windows.UI.Xaml.Controls.MenuFlyoutItem element13 = (global::Windows.UI.Xaml.Controls.MenuFlyoutItem)(target);
                    ((global::Windows.UI.Xaml.Controls.MenuFlyoutItem)element13).Click += this.ShareMenuFlyoutItem_Click;
                }
                break;
            case 15: // Pages\SongListDetail.xaml line 44
                {
                    this.CreaterPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 16: // Pages\SongListDetail.xaml line 49
                {
                    this.TagPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 17: // Pages\SongListDetail.xaml line 53
                {
                    this.AlbumMessage = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 18: // Pages\SongListDetail.xaml line 80
                {
                    this.DescPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 19: // Pages\SongListDetail.xaml line 88
                {
                    this.DisplayAll = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.DisplayAll).PointerEntered += this.Cursor_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.DisplayAll).PointerExited += this.Cursor_PointerExited;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.DisplayAll).PointerPressed += this.DisplayAll_PointerPressed;
                }
                break;
            case 20: // Pages\SongListDetail.xaml line 93
                {
                    this.Collect = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Collect).PointerEntered += this.Cursor_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Collect).PointerExited += this.Cursor_PointerExited;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Collect).PointerPressed += this.Collect_PointerPressed;
                }
                break;
            case 21: // Pages\SongListDetail.xaml line 98
                {
                    this.Download = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Download).PointerEntered += this.Cursor_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Download).PointerExited += this.Cursor_PointerExited;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Download).PointerPressed += this.Download_PointerPressed;
                }
                break;
            case 22: // Pages\SongListDetail.xaml line 103
                {
                    this.Share = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Share).PointerEntered += this.Cursor_PointerEntered;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Share).PointerExited += this.Cursor_PointerExited;
                    ((global::Windows.UI.Xaml.Controls.StackPanel)this.Share).PointerPressed += this.Share_PointerPressed;
                }
                break;
            case 23: // Pages\SongListDetail.xaml line 83
                {
                    this.Desc = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28: // Pages\SongListDetail.xaml line 51
                {
                    this.Tags = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 29: // Pages\SongListDetail.xaml line 46
                {
                    this.CreaterName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 30: // Pages\SongListDetail.xaml line 29
                {
                    this.TypeName = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 32: // Pages\SongListDetail.xaml line 36
                {
                    this.SplitLine = (global::Windows.UI.Xaml.Shapes.Line)(target);
                }
                break;
            case 33: // Pages\SongListDetail.xaml line 37
                {
                    this.ListenNumPanel = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 34: // Pages\SongListDetail.xaml line 39
                {
                    this.ListenNum = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.16.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Pages\SongListDetail.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    SongListDetail_obj1_Bindings bindings = new SongListDetail_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            case 6: // Pages\SongListDetail.xaml line 137
                {                    
                    global::Windows.UI.Xaml.Controls.UserControl element6 = (global::Windows.UI.Xaml.Controls.UserControl)target;
                    SongListDetail_obj6_Bindings bindings = new SongListDetail_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    bindings.SetConverterLookupRoot(this);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

